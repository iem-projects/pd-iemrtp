#N canvas 287 312 670 493 10;
#X msg 187 171 bang;
#X obj 88 380 print decoded;
#X text 48 12 [unpackRTCP];
#X text 54 38 decode an RTCP-packet;
#N canvas 469 180 598 544 double-packet 0;
#X obj 88 233 packRTCP;
#N canvas 558 369 500 153 RR 0;
#X obj 68 77 outlet;
#X obj 68 37 inlet;
#X msg 68 57 RR SSRC 123 431 \, RR 0 SSRC 321 654 \, RR 1 SSRC 134
55 \, bang;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 88 213 pd RR;
#N canvas 441 535 406 152 SDES 0;
#X obj 68 77 outlet;
#X obj 68 37 inlet;
#X msg 68 57 SDES SRC 123 431 \, SDES 0 CNAME blabla \, bang;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 162 213 pd SDES;
#X obj 88 190 t b b;
#X obj 162 233 packRTCP;
#X obj 88 255 list append;
#X text 88 120 (though you should make sure that the resulting packet
is not too large for the transport protocol);
#X text 89 94 RTCP-packets can be simply concatenated;
#X obj 88 277 outlet;
#X obj 88 164 inlet;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 3 0 1 0;
#X connect 3 1 2 0;
#X connect 4 0 5 1;
#X connect 5 0 8 0;
#X connect 9 0 3 0;
#X restore 187 191 pd double-packet;
#X obj 88 278 unpackRTCP;
#X obj 121 360 print packet#;
#X obj 155 340 print reject;
#X msg 88 121 bang;
#N canvas 333 245 639 269 sender 0;
#X obj 68 165 packRTCP;
#X obj 68 187 outlet;
#X obj 68 77 inlet;
#X msg 68 114 SR SSRC 123 431 \, SR NTP 312 341 543 653 \, SR timestamp
541 2 \, SR packets_sent 0 13 \, SR octets_sent 0 1342 \, bang;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X restore 88 143 pd sender report;
#X obj 88 217 t a b;
#X obj 167 238 print -------------------;
#X connect 0 0 4 0;
#X connect 4 0 10 0;
#X connect 5 0 1 0;
#X connect 5 1 6 0;
#X connect 5 2 7 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 5 0;
#X connect 10 1 11 0;
