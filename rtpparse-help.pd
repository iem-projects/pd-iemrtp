#N canvas 337 148 567 507 10;
#X obj 42 48 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 42 68 t f f;
#N canvas 5 49 450 300 RTP-packet-generator~ 0;
#X obj 72 17 inlet;
#X msg 72 39 auto \$1;
#X obj 72 101 L16pay~;
#X obj 159 51 osc~ 440;
#X obj 159 77 phasor~ 440;
#X obj 72 123 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 2 1;
#X restore 42 92 pd RTP-packet-generator~;
#X msg 59 161 127 32 46;
#X text 137 163 an invalid packet;
#X msg 55 121 128 96 10 183 0 2 174 0 16 225 4 210 131 221 69 3 134
16 70 73;
#X obj 142 285 print header;
#X obj 68 246 t a a;
#X obj 205 264 tgl 15 0 empty \$0-show empty 17 7 0 10 -262144 -1 -1
1 1;
#X text 37 8 [unpackRTP] parse generic information from the header of
an RTP-packet;
#X text 232 265 <- might lock Pd-GUI (when used with the RTP-packet-generator~)
;
#X obj 200 467 s \$0-show;
#X obj 200 448 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 200 383 r pd;
#X obj 200 405 route dsp;
#X obj 200 427 == 0;
#X obj 142 263 spigot 1;
#X text 228 450 safety net: turn off [print]s when DSP is on.;
#X floatatom 290 424 5 0 0 0 - - -;
#X msg 84 55 \; pd dsp \$1;
#X obj 86 217 cnv 15 100 25 empty empty empty 20 12 0 14 -260097 -66577
0;
#N canvas 5 49 555 299 reject 0;
#X obj 88 147 print reject;
#X obj 88 120 inlet reject;
#X text 58 41 the 3rd outlet of [unpackRTP] gives you the data that
[unpackRTP] identifies as "not RTP".;
#X connect 1 0 0 0;
#X restore 95 220 pd reject;
#X obj 65 308 cnv 15 100 25 empty empty empty 20 12 0 14 -260097 -66577
0;
#N canvas 479 134 491 482 header 0;
#X floatatom 71 109 5 0 0 3 version - -;
#X floatatom 141 110 5 0 0 3 p - -;
#X floatatom 212 109 5 0 0 3 x - -;
#X floatatom 283 109 5 0 0 3 m - -;
#X obj 71 49 inlet header info;
#X obj 425 132 t a;
#X floatatom 71 283 5 0 0 3 TShi - -;
#X floatatom 112 283 5 0 0 3 TSlo - -;
#X obj 71 239 route timestamp sequence_number;
#X floatatom 178 262 5 0 0 3 seq - -;
#X obj 71 261 unpack;
#X obj 425 222 t a;
#X floatatom 71 193 5 0 0 3 SSRChi - -;
#X floatatom 115 193 5 0 0 3 SSRClo - -;
#X obj 71 171 unpack;
#X floatatom 248 198 5 0 0 3 CSRCid - -;
#X floatatom 298 198 5 0 0 3 CSRChi - -;
#X obj 71 90 route version padding extension marker payload_type;
#X floatatom 174 189 5 0 0 3 CSRC.cnt - -;
#X obj 248 176 unpack 0 0 0;
#X floatatom 349 197 5 0 0 3 CSRClo - -;
#X floatatom 354 109 5 0 0 3 pt - -;
#X obj 71 149 route SSRC cc CSRC ................................;
#X text 79 358 values that are given as "unsigned 32bit integer" (like
timestamp \, SSRC- and CSRC-ids) are given as a pair of two numbers
(hi & lo): the original value can be computed as:;
#X text 146 404 val = (hi<<16)+lo;
#X connect 4 0 17 0;
#X connect 5 0 22 0;
#X connect 8 0 10 0;
#X connect 8 1 9 0;
#X connect 10 0 6 0;
#X connect 10 1 7 0;
#X connect 11 0 8 0;
#X connect 14 0 12 0;
#X connect 14 1 13 0;
#X connect 17 0 0 0;
#X connect 17 1 1 0;
#X connect 17 2 2 0;
#X connect 17 3 3 0;
#X connect 17 4 21 0;
#X connect 17 5 5 0;
#X connect 19 0 15 0;
#X connect 19 1 16 0;
#X connect 19 2 20 0;
#X connect 22 0 14 0;
#X connect 22 1 18 0;
#X connect 22 2 19 0;
#X connect 22 4 11 0;
#X restore 68 312 pd header;
#X text 142 312 <- look inside for a live-view;
#X obj 37 394 cnv 15 100 25 empty empty empty 20 12 0 14 -260097 -66577
0;
#N canvas 7 49 602 311 data 0;
#X obj 42 187 print data;
#X obj 104 166 tgl 15 0 empty \$0-show empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 42 27 inlet data;
#X text 127 166 might lock Pd-GUI (as there is lots of data);
#X text 49 69 the 1st outlet of [unpackRTP] will give you the raw data
(as a list of bytes) of the RTP-packet (minus the RTP-header that has
been consumed by the object). most likely \, you will need to send
it to a proper decoder in order to use it. e.g. [L16decode~];
#X obj 42 165 spigot 1;
#X connect 1 0 5 1;
#X connect 2 0 5 0;
#X connect 5 0 0 0;
#X restore 42 398 pd data;
#X obj 26 186 cnv 15 100 25 empty empty empty 20 12 0 14 -4034 -66577
0;
#X obj 42 190 unpackRTP;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 19 0;
#X connect 2 0 28 0;
#X connect 3 0 28 0;
#X connect 5 0 28 0;
#X connect 7 0 23 0;
#X connect 7 1 16 0;
#X connect 8 0 16 1;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 14 0 18 0;
#X connect 15 0 12 0;
#X connect 16 0 6 0;
#X connect 28 0 26 0;
#X connect 28 1 7 0;
#X connect 28 2 21 0;
