#N canvas 287 312 670 493 10;
#X msg 42 71 bang;
#X obj 88 260 t a a;
#X obj 88 332 unpackRTCP;
#X obj 88 238 packRTCP;
#X obj 88 354 print decoded;
#X obj 130 260 print raw;
#X text 48 12 [packRTCP];
#X text 54 38 create an RTCP-packet;
#X text 85 74 send the packet as bytelist;
#N canvas 611 385 639 303 receiver 0;
#X obj 68 275 outlet;
#X msg 68 57 RR SSRC 123 431;
#X text 58 26 Receiver Report;
#X msg 114 134 RR 0 fraction 32;
#X msg 114 154 RR 0 lost 67;
#X text 119 97 RR-report;
#X text 204 59 ID for the source <hi> <lo> (actual ID=hi<<16+lo);
#X msg 114 174 RR 0 last_seq 332 123;
#X msg 114 194 RR 0 jitter 321 123;
#X msg 114 214 RR 0 lsr 43 45;
#X msg 114 234 RR 0 dlsr 6735 345;
#X msg 151 265 bang;
#X msg 114 114 RR 0 SSRC 321 654;
#X text 296 138 syntax: RR <slot#> <keywd> <VALhi> <VALlo>;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X restore 189 103 pd receiver report;
#N canvas 611 385 639 398 sender 0;
#X obj 68 365 outlet;
#X text 204 59 ID for the source <hi> <lo> (actual ID=hi<<16+lo);
#X msg 151 355 bang;
#X msg 68 57 SR SSRC 123 431;
#X msg 114 204 SR 0 SSRC 321 654;
#X msg 114 224 SR 0 fraction 32;
#X msg 114 244 SR 0 lost 67;
#X msg 114 264 SR 0 last_seq 332 123;
#X msg 114 284 SR 0 jitter 321 123;
#X msg 114 304 SR 0 lsr 43 45;
#X msg 114 324 SR 0 dlsr 6735 345;
#X text 58 26 Sender Report;
#X text 118 187 SR-report (per source);
#X msg 111 90 SR NTP 121 341 54 123;
#X text 278 92 NTP timestamp: SEChi SEClo FRAChi FRAClo;
#X msg 111 110 SR timestamp 432 3412;
#X text 314 272 syntax: SR <slot#> <keywd> <VALhi> <VALlo>;
#X text 279 112 RTP timestamp: <TShi> <TSlo>;
#X msg 111 130 SR packets_sent 0 13;
#X msg 111 150 SR octets_sent 0 18204;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 13 0 0 0;
#X connect 15 0 0 0;
#X connect 18 0 0 0;
#X connect 19 0 0 0;
#X restore 189 123 pd sender report;
#N canvas 1284 799 506 221 bye 0;
#X obj 81 147 outlet;
#X msg 81 102 BYE 0 1234 5678;
#X text 63 50 BYE: remove SRCs from listening;
#X text 200 103 BYE <SRC#> <hi> <lo>;
#X text 200 136 the SRC-id is calculated as (hi<<16+lo);
#X connect 1 0 0 0;
#X restore 189 163 pd bye;
#N canvas 449 467 639 303 source 0;
#X text 58 26 source description;
#X obj 68 275 outlet;
#X msg 68 57 SDES SRC 123 431;
#X text 204 59 ID for this source <hi> <lo> (actual ID=hi<<16+lo);
#X msg 114 114 SDES 0 CNAME foo;
#X msg 114 134 SDES 1 NAME bar;
#X msg 114 154 SDES 2 EMAIL zmoelnig@iem.at;
#X msg 114 174 SDES 2 PHONE +1.234.56789;
#X msg 114 214 SDES 4 TOOL puredata;
#X msg 114 194 SDES 2 LOC Graz/Austria;
#X msg 114 234 SDES 5 NOTE none;
#X msg 114 254 SDES 5 PRIV ---;
#X text 119 97 SDES-items;
#X text 333 117 syntax: SDES <slot#> <keywd> <symbol>;
#X connect 2 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X connect 8 0 1 0;
#X connect 9 0 1 0;
#X connect 10 0 1 0;
#X connect 11 0 1 0;
#X restore 189 143 pd source description;
#X text 193 219 setting a field of a /new/ packet-type \, will automatically
forget settings for the previous packet-type;
#N canvas 466 192 598 544 concatenating 0;
#X obj 88 290 t a a;
#X obj 88 332 unpackRTCP;
#X obj 88 233 packRTCP;
#X obj 88 354 print decoded;
#X obj 130 290 print raw;
#N canvas 557 373 500 153 RR 0;
#X obj 68 77 outlet;
#X obj 68 37 inlet;
#X msg 68 57 RR SSRC 123 431 \, RR 0 SSRC 321 654 \, RR 1 SSRC 134
55 \, bang;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 88 213 pd RR;
#N canvas 441 535 406 152 SDES 0;
#X obj 68 77 outlet;
#X obj 68 37 inlet;
#X msg 68 57 SDES SRC 123 431 \, SDES 0 CNAME blabla \, bang;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 162 213 pd SDES;
#X obj 88 190 t b b;
#X obj 162 233 packRTCP;
#X obj 88 255 list append;
#X msg 88 160 bang;
#X text 88 120 (though you should make sure that the resulting packet
is not too large for the transport protocol);
#X text 89 94 RTCP-packets can be simply concatenated;
#X connect 0 0 1 0;
#X connect 0 1 4 0;
#X connect 1 0 3 0;
#X connect 2 0 9 0;
#X connect 5 0 2 0;
#X connect 6 0 8 0;
#X connect 7 0 5 0;
#X connect 7 1 6 0;
#X connect 8 0 9 1;
#X connect 9 0 0 0;
#X connect 10 0 7 0;
#X restore 438 354 pd concatenating;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 1 1 5 0;
#X connect 2 0 4 0;
#X connect 3 0 1 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 12 0 3 0;
